precision mediump int;

attribute vec4 aPosition;
attribute vec3 aNormal; 
attribute vec2 textureCoord;

uniform mat4 mvMatrix;
uniform mat4 sunMvMatrix;
uniform mat4 modelMatrix;
uniform bool hasColorTexture;
uniform bool hasShadowTexture;
uniform mat4 colorTextureMatrix;

varying vec2 vCoord;
varying float vFogDepth;
varying vec3 vNormal;
varying vec4 shadowCoord;

void main() {
	vec4 vPosition = mvMatrix * aPosition;
	if (hasColorTexture) {
		vCoord = (colorTextureMatrix * vec4(textureCoord.x, textureCoord.y, 1.0, 1.0)).xy;
	}
	vNormal = normalize(modelMatrix * vec4(aNormal, 0.0)).xyz;
	vFogDepth = vPosition.z;
	gl_Position = vPosition;
	if (hasShadowTexture) {
		vec4 aPositionAdjusted = aPosition;
		aPositionAdjusted.x += 0.05;
		aPositionAdjusted.z += 0.05;
		aPositionAdjusted.y += 0.05;
		shadowCoord = sunMvMatrix * aPositionAdjusted;
	}
}
